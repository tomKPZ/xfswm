# Disabled checks:
Checks: 'abseil-*,
         android-*,
         boost-*,
         bugprone-*,
         cert-*,
         clang-analyzer-*,
         cppcoreguidelines-avoid-goto,
         cppcoreguidelines-c-copy-assignment-signature,
         cppcoreguidelines-interfaces-global-init,
         cppcoreguidelines-narrowing-conversions,
         cppcoreguidelines-no-malloc,
         cppcoreguidelines-owning-memory,
         cppcoreguidelines-pro-bounds-array-to-pointer-decay,
         cppcoreguidelines-pro-bounds-constant-array-index,

         # Allow indexing into arrays.
         # cppcoreguidelines-pro-bounds-pointer-arithmetic,
         cppcoreguidelines-pro-type-const-cast,
         cppcoreguidelines-pro-type-cstyle-cast,
         cppcoreguidelines-pro-type-member-init,
         cppcoreguidelines-pro-type-static-cast-downcast,
         cppcoreguidelines-pro-type-vararg,

         # reinterpret_cast is necessary for some POSIX APIs.
         # cppcoreguidelines-pro-type-reinterpret-cast,
         cppcoreguidelines-slicing,
         cppcoreguidelines-special-member-functions,

         # XCB usage requires some unions.
         # cppcoreguidelines-pro-type-union-access,

         # Allow usage of default argument functions provided by the STL.
         # fuchsia-default-arguments-calls,
         fuchsia-default-arguments-declarations,
         fuchsia-header-anon-namespaces,
         fuchsia-multiple-inheritance,

         # Overriding operator() is necessary to implement custom deleters.
         fuchsia-overloaded-operator,
         fuchsia-restrict-system-includes,
         fuchsia-statically-constructed-objects,

         # This conflicts with another check, but the Fuchsia rules for trailing
         # return types seem more reasonable than using them everywhere, so
         # perhaps the other check should be disabled in favor of this one.
         # fuchsia-trailing-return,
         fuchsia-virtual-inheritance,
         google-*,
         hicpp-*,

         # This project uses #pragma once.
         # llvm-header-guard,
         llvm-include-order,
         llvm-namespace-comment,
         llvm-twine-local,
         misc-*,
         modernize-*,
         mpi-*,
         objc-*,
         performance-*,
         portability-*,
         readability-*,
         zircon-*'
CheckOptions:
  # Identifier naming initially copied from [1] to match the Google Style Guide.
  # [1] https://github.com/googleapis/google-cloud-cpp/blob/master/.clang-tidy
  - { key: readability-identifier-naming.NamespaceCase,            value: lower_case }
  - { key: readability-identifier-naming.ClassCase,                value: CamelCase  }
  - { key: readability-identifier-naming.StructCase,               value: CamelCase  }
  - { key: readability-identifier-naming.TemplateParameterCase,    value: CamelCase  }
  - { key: readability-identifier-naming.FunctionCase,             value: CamelCase  }
  - { key: readability-identifier-naming.VariableCase,             value: lower_case }
  - { key: readability-identifier-naming.PrivateMemberSuffix,      value: _          }
  - { key: readability-identifier-naming.ProtectedMemberSuffix,    value: _          }
  - { key: readability-identifier-naming.MacroDefinitionCase,      value: UPPER_CASE }
  - { key: readability-identifier-naming.EnumConstantCase,         value: CamelCase  }
  - { key: readability-identifier-naming.EnumConstantPrefix,       value: k          }
  - { key: readability-identifier-naming.ConstexprVariableCase,    value: CamelCase  }
  - { key: readability-identifier-naming.ConstexprVariablePrefix,  value: k          }
  - { key: readability-identifier-naming.GlobalConstantCase,       value: CamelCase  }
  - { key: readability-identifier-naming.GlobalConstantPrefix,     value: k          }
  - { key: readability-identifier-naming.MemberConstantCase,       value: CamelCase  }
  - { key: readability-identifier-naming.MemberConstantPrefix,     value: k          }
  - { key: readability-identifier-naming.StaticConstantCase,       value: CamelCase  }
  - { key: readability-identifier-naming.StaticConstantPrefix,     value: k          }
User: tomKPZ
